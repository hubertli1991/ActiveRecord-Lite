quit
source_options
through_options
quit
through_foreign_key
source_primary_key
quit
self.class.assoc_options
assoc_options
source_options
quit
y
quit
source_class
quit
through_options.class_name.constantize.assoc_options[source_name]
through_options.class_name.constantize
quit
assoc_options
assoc_options[:human]
c
assoc_options[:human]
assoc_options
self
c
assoc_options
self
quit
c
self
c
assoc_options[:human]c
assoc_options[:human]
assoc_options
c
assoc_options
quit
assoc_options
assoc_options[7] = 888
assoc_options
assoc_options[:human]
assoc_options
name
self
c
name
self
quit
source_name
assoc_options
through_name.to_s.camelcase.constantize.belongs_to(source_name)
through_name.to_s.camelcase.constantize
quit
source_options
source_table
quit
through_name.to_s.camelcase.constantize
through_name.to_s.camelcase.camelcase
through_name.to_s.camelcase
through_name.to_scamelcase
through_name.camelcase
through_name
self.through_name
"Human".constantize
"human".constantize
"Cat".constantize
"cat".constantize
self.to_s
self
through_name.to_s
through_name.to_s.constantize
through_name.to_s
through_name.class
through_name
self.class.assoc_options[through_name]
self.class.assoc_options[source_name]
through_name
source_name
source_options
through_options.class_name.constantize.table_name
through_options.class_name.constantize
through_options.class_name
through_options
through_table
quit
 self.class.assoc_options[through_name]
through_name
through_table
through_table.class_name
through_table.class_name.constantize.table_name
self.class.assoc_options[through_name]
self.class.assoc_options[source_name]
source_options
source_options.class_name
self.class
quit
through_options
quit
self
quit
through_options.class_name.constantize.table_name
through_options.class_name.constantize
through_options
self
self.class.table_name
self
self.table_name
self.table
self.tablelize
self
through_options
quit
self.class
self
quit
through_name
through
quit
n
quit
foreign_key
quit
stuff
quit
self.assoc_options
self
quit
self
id
quit
self
quit
self
self.send("owner_id")
self.methods.include?(:!)
self.methods.include?(:id)
self.methods.include(:id)
self.methods
self.send("owner_id")
self.send(:owner_id)
self
self.assoc_options[name].foreign_key
self.assoc_options[name]
self.assoc_options
quit
id
quit
id
quit
self.send(options.foreign_key)
options
quit
self
self.assoc_options[name].foreign_key
self.send(self.assoc_options[name].foreign_key)
quit
optionsquit
options
id
quit
id
self.assoc_options[name].foreign_key
self.assoc_options[name]
self.assoc_options.foriegn_key
self.assoc_options
self
quit
self.assoc_options
quit
exit
self.assoc_options
self
quit
self.class
self
options
c
quit
c
options
c
n
options
quit
options.table_name
options
self.has_many
Cat.has_many
Cat.execute
Cat.model_class
self.model_class
model_class
options
optiosn
self
quit
defaults
quit
exit
defaults
class_name
quit
exit
*params.values
params.values
params
exit
quit
where_string_array.join(' AND ')
where_string_array
quit
params
   11:     end
   10:       where_string_array << column.to_s + ' = ' + value.to_s
    9:     params.each do |column, value|
    8: 
where_string_array = []
params
quit
params
where_string
quit
results
quit
results
quit
results
quit
where_string
quit
where_string_array
quit
exit
quit
self
self.id
quit
exit
self
human
self.id
self.if
self.class
exit
self.class.columns.map { |col| '?' }.join(', ')
self.class.columns.map { |col| '?' }
self.id
attribute_values
self.class.columns
quit
exit
@.to_s+"#{a[0]}"
@+"#{a[0]}"
@"#{a[0]}"
a[0].to_sym.to_s
a[0].to_sym
